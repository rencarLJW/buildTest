
name: build
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KEY_ALIAS: $
      KEYSTORE_PASSWORD: $
      KEY_PASSWORD: $

    steps:
      - name: Extract commit message
        shell: bash
        run: |
          export VERSION_INFO=$(echo ${{ github.event.head_commit.message }} | rev | cut -d ' ' -f1 | rev)
          echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV

      - name: Slack Notification Start
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_ICON_EMOJI: ":bellhop_bell:"
          SLACK_TITLE: ":bellhop_bell: 빌드 시작 / 버전 : ${{ env.VERSION_INFO }}"
          SLACK_USERNAME: "incoming-webhook"
          SLACK_CHANNEL: "#caro-monitoring-build-android"
          SLACK_COLOR: "#CCCCCC"
          SLACK_MESSAGE: "commit : ${{ github.event.head_commit.message }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          
          
      - name: set APK name
        run: |
          export TEMP_APK_NAME="caro_version_$VERSION_INFO.apk"
          echo "APK_NAME=$TEMP_APK_NAME" >> $GITHUB_ENV
          
          export TEMP_BUNDLE_NAME="caro_version_$VERSION_INFO.aab"
          echo "BUNDLE_NAME=$TEMP_BUNDLE_NAME" >> $GITHUB_ENV

      - uses: actions/checkout@v2
         
      - name: Store Gradle cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: $-gradle-$
          restore-keys: $-gradle-

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install NDK
        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}
        
        
      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > key.base64
          base64 -d key.base64 > key

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle, APK
        run:
          ./gradlew clean assembleRelease
          pwd
          ls

      - name: Build with Gradle, Bundle
        run:
          ./gradlew clean bundleRelease


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ap-northeast-2

      - name: Upload release bundle
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: android/app/build/outputs/bundle/release/app-release.apk
          retention-days: 60

      - name: Slack Notification Finish With Success
        uses: rtCamp/action-slack-notify@v2
        if: success()
        env:
          SLACK_ICON_EMOJI: ":bellhop_bell:"
          SLACK_TITLE: ":bellhop_bell: 빌드 성공 / 버전 : $($) / 브랜치 : $"
          SLACK_USERNAME: "incoming-webhook"
          SLACK_CHANNEL: "#caro-monitoring-build-android"
          SLACK_COLOR: "#00BFA5"
          SLACK_MESSAGE: "commit : $\n<${{ secrets.S3_URL }}${{ env.APK_NAME }}>"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Slack Notification Finish With Fail
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_ICON_EMOJI: ":bellhop_bell:"
          SLACK_TITLE: ":bellhop_bell: 빌드 실패 / 버전 : $($) / 브랜치 : $"
          SLACK_USERNAME: "incoming-webhook"
          SLACK_CHANNEL: "#caro-monitoring-build-android"
          SLACK_COLOR: "#FF5252"
          SLACK_MESSAGE: "commit : ${{ github.event.head_commit.message }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
