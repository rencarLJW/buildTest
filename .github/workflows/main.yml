
name: build
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KEY_ALIAS: $
      KEYSTORE_PASSWORD: $
      KEY_PASSWORD: $

    steps:
      - name: Store Gradle cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: $-gradle-$
          restore-keys: $-gradle-

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install NDK
        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}
        
      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
        
      - name : Retrieve Version
        run: |
         echo "::set-output name=VERSION_NAME::$(./gradlew -q printVersionName)"
        id: android_version
        
      - name: Get version
        run: |
          echo "version_name=${{steps.android_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV
    
      - name: set APK name
        run: |
          export TEMP_APK_NAME="caro_version_${{env.version_name}}.apk"
          echo "APK_NAME=$TEMP_APK_NAME" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      

      - name: Build with Gradle
        run:
          ./gradlew clean assembleRelease

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ap-northeast-2

      - name: Copy files to S3 with the AWS CLI
        run: |
          find . -type f -name "*.apk" -exec cp '{}' $APK_NAME \;
          aws s3 cp $APK_NAME ${{ secrets.S3_BUCKET_URL }}

